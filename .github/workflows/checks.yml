name: Checks

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

jobs:
  define-lint:
    runs-on: ubuntu-latest
    outputs:
      lints: ${{ steps.lints.outputs.value }}
    steps:
      - uses: actions/checkout@v4
      - uses: sergeysova/jq-action@v2
        id: lints
        with:
          cmd: jq '[.scripts | keys | .[] | select (contains("lint:")) | sub("^lint:"; "") ]' package.json --compact-output
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint: ${{ fromJSON(needs.define-lints.outputs.lints) }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      - name: 'Add custom matcher' # see https://github.com/actions/setup-node/issues/403
        env:
          lint: ${{ matrix.lint }}
        run: echo "::add-matcher::.github/workflows/$lint-matcher.json"
      - name: Install Node Dependencies
        run: pnpm install
      - name: Run all lints
        env:
          lint: ${{ matrix.lint }}
        run: pnpm run lint:$lint

  test:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/playwright:v1.48.2-jammy
    permissions:
      checks: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run Playwright tests
        run: HOME='/root' pnpm run test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: playwright-results.xml
          retention-days: 30
